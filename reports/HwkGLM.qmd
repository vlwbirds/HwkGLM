---
title: "HwkGLM"
format: html
editor: visual
---

## Model Hawk GLM

This is an attempt to build code for a generalize linear model. The data used are predator-prey reaction behaviors collected by launching a model hawk at birds in the Amazon in Madre de Dios, Peru. Reactions include: no response, call, alarm, sing, dive, hide, freeze, visual search

### Installing Packages

```{r}
#install.packages("glmm")

library(glmm)
library(here)
library(tidyverse)

```

## Loading Hawk Data

```{r}
hwk_GLM <- read_csv(here("data/hwkGLM.csv"))
view(hwk_GLM)

hwk_data <- read_csv(here("data/hwkdata.csv")) %>% 
  mutate(Flock_size = as.numeric(Flock_size)) %>% 
  mutate(Post_Dist = as.numeric(Post_Dist)) %>% 
  mutate(Veg_under_height = as.numeric(Veg_under_height)) %>% 
  mutate(Veg_mid_low = as.numeric(Veg_mid_low)) %>% 
  mutate(Veg_mid_high = as.numeric(Veg_mid_high)) %>% 
  mutate(Veg_can_low = as.numeric(Veg_can_low)) %>% 
  mutate(Veg_can_high = as.numeric(Veg_can_high)) %>% 
  mutate(Rad_Avg_Dense = as.numeric(Rad_Avg_Dense)) %>% 
  mutate(across(c(Social_Index, hwk, Species, Mid_Vocal, Mid_Behav_2, Mid_Join, Sex), factor))
         #across(c(Veg_mid_low, Veg_mid_high, Veg_can_low, Veg_can_high, Rad_Avg_Dense), numeric))
  
hwk_data$Social_Index [hwk_data$Social_Index == "#N/A"] <- NA
str(hwk_data)


view(hwk_data)
```

## Generalized Linear Model 1 (larger index)

```{r}
model1 <- glm(Mid_Join_Index1 ~ Mid_Join, data = hwk_GLM, family = poisson(link = "log"))
summary(model1)
```

## Generalized Linear Model 2 (conservative)

```{r}
#remove competitive
hwk_glm_1 <- hwk_GLM[hwk_GLM$Social_Index != "2", ]

model2 <- glm(Mid_Join_Index2 ~ Social_Index + SpeciesID + Pre_Height + Pre_Dense, data = hwk_glm_1, family = poisson(link = "log"))
summary(model2)

model3 <- glm(alarm ~ Social_Index, data = hwk_glm_1, family = binomial(link = "logit"))
summary(model3)
view(hwk_glm_1)
# update to multinomial distrubution
```

response \~ species + veg density + foraging + sociality

Sociality: MSF, singles, pairs, leks, SSF (single species group)

## Model with hwk_data

```{r}

```

## Create Alarm in Dataframes

```{r}
hwk_GLM$alarm <- ifelse(hwk_GLM$Mid_Join_Index2 == 4,1,0)
View(hwk_GLM)

hwk_data$alarm <- ifelse(hwk_data$Mid_Vocal_Index == 2,1,0)
view(hwk_data)
```

## Social Index GLM Model

```{r}

model <- glm(alarm ~ Social_Index + SpeciesID + Pre_Height + Pre_Dense, data = hwk_GLM, family = binomial(link = "logit"))
summary(model)
```

```{r}
model <- glm(alarm ~ Social_Index + 
               SpeciesID + 
               Pre_Height + 
               Pre_Dense, 
             data = hwk_GLM, family = binomial(link = "logit"))
summary(model)
```

## Modeling with full hwk_data

```{r}
# selecting only hwk treatment
hwk_subset <- subset(hwk_data, hwk == 1)
hwk_subset$alarm <- as.factor(ifelse(hwk_subset$Mid_Vocal_Index==2,1,0))

# GLM model
model <- glm(alarm ~ SppID +
               sexID + 
               Flock_size + 
              # Flight_proximity + 
               #Pre_Height + 
               #Veg_under_height + 
              # Veg_mid_low + 
               #Veg_mid_high + 
              # Rad_Avg_Dense + 
               Pre_Dense, 
             data = hwk_subset, family = binomial(link = "logit"))
summary(model)
```

## Treatment Significance - Control v Hawk

```{r}
trt <- glm(alarm ~ hwk, data = hwk_data, family = binomial(link = "logit"))
summary(trt)             
```

## Bar Plot of Treatment Versus Control Alarm Percentage

```{r}
# Calculate percentage of positive reactions for treatment and control
percentage_treatment <- mean(hwk_data$alarm[hwk_data$hwk == 1]) * 100
percentage_control <- mean(hwk_data$alarm[hwk_data$hwk == 0]) * 100

# Calculate sample size for treatment and control
sample_size_treatment <- sum(hwk_data$hwk == 1)
sample_size_control <- sum(hwk_data$hwk == 0)

# Create a new data frame for plotting
plot_data <- data.frame(
  Group = c("Treatment", "Control"),
  Percentage = c(percentage_treatment, percentage_control),
  SampleSize = c(sample_size_treatment, sample_size_control)
)

# Create a bar plot
ggplot(plot_data, aes(x = Group, y = Percentage, fill = Group)) +
  geom_bar(stat = "identity", position = "dodge") +
  geom_text(aes(label = paste("n =", SampleSize)), position = position_dodge(width = 0.9), vjust = -0.5) +
  labs(title = "Percentage of Positive Reactions by Group",
       y = "Alarm Percentage",
       x = "Group") +
  scale_y_continuous(labels = scales::percent_format(scale = 1), limits = c(0, 50)) +
  theme_minimal()


```

## Social Structure Alarm Plot

```{r}
#subsetting for only treatment
hwk_subset <- subset(hwk_data, hwk == 1)
hwk_subset$alarm <- as.numeric(ifelse(hwk_subset$Mid_Vocal_Index==2,1,0))

# percentages of alarm by social structure
percent_solo <- mean(hwk_subset$alarm[hwk_subset$Social_Index == 0], na.rm = TRUE) * 100
percent_pair <- mean(hwk_subset$alarm[hwk_subset$Social_Index == 1], na.rm = TRUE) * 100
percent_comp <- mean(hwk_subset$alarm[hwk_subset$Social_Index == 2], na.rm = TRUE) * 100
percent_ssf <- mean(hwk_subset$alarm[hwk_subset$Social_Index == 3], na.rm = TRUE) * 100
percent_msf <- mean(hwk_subset$alarm[hwk_subset$Social_Index == 4], na.rm = TRUE) * 100

# Sample sizes
sample_solo <- sum(hwk_subset$Social_Index == 0, na.rm = TRUE)
sample_pair <- sum(hwk_subset$Social_Index == 1, na.rm = TRUE)
sample_comp <- sum(hwk_subset$Social_Index == 2, na.rm = TRUE)
sample_ssf <- sum(hwk_subset$Social_Index == 3, na.rm = TRUE)
sample_msf <- sum(hwk_subset$Social_Index == 4, na.rm = TRUE)

# New dataframe for plotting
plot_data <- data.frame(
 Group = factor(c("Solo", "Pair", "Single-species Flock", "Mixed-species Flock", "Competitive"),
                levels = c("Solo", "Pair", "Single-species Flock", "Mixed-species Flock", "Competitive")),  
 Percentage = c(percent_solo, percent_pair, percent_ssf, percent_msf, percent_comp),
  SampleSize = c(sample_solo, sample_pair, sample_ssf, sample_msf, sample_comp)
)

# Create a bar plot
ggplot(plot_data, aes(x = Group, y = Percentage, fill = Group)) +
  geom_bar(stat = "identity", position = "dodge") +
  geom_text(aes(label = paste("n =", SampleSize)), position = position_dodge(width = 0.9), vjust = -0.5) +
  labs(title = "Percentage of Positive Reactions by Sociality",
       y = "Alarm Percentage",
       x = "Group") +
  scale_y_continuous(labels = scales::percent_format(scale = 1), limits = c(0, 50)) +
  theme_minimal()
```

## Social Structure By Species Alarming

```{r}
alarm_subset <- subset(hwk_subset, alarm == 1)
social_group <- alarm_subset %>% 
  group_by(Social_Index, Species) %>%
  summarize(total_alarm = sum(alarm)) %>% 
  group_by(Social_Index) %>% 
  mutate(proportion_alarm = total_alarm / sum(total_alarm))

view(social_group)

# multiply by proportions
percent_solo <- mean(hwk_subset$alarm[hwk_subset$Social_Index == 0], na.rm = TRUE) * 100
percent_pair <- mean(hwk_subset$alarm[hwk_subset$Social_Index == 1], na.rm = TRUE) * 100
percent_comp <- mean(hwk_subset$alarm[hwk_subset$Social_Index == 2], na.rm = TRUE) * 100
percent_ssf <- mean(hwk_subset$alarm[hwk_subset$Social_Index == 3], na.rm = TRUE) * 100
percent_msf <- mean(hwk_subset$alarm[hwk_subset$Social_Index == 4], na.rm = TRUE) * 100

```

## GLM Alarming by Social Index

```{r}
# subset to only hawk trials
hwk_subset <- subset(hwk_data, hwk == 1)

# model
model <- glm(alarm ~ Social_Index, data = hwk_subset, family = binomial(link = "logit"))
summary(model)

str(hwk_subset)
```

## GLM - Social Index, Competitive Removed

```{r}

```

## Social Index % by Group and Species

```{r}
# Convert "alarm" column to numeric
hwk_data$alarm <- as.numeric(hwk_data$alarm)

# Filter out non-numeric or missing values in the "alarm" column
hwk_data_filtered <- hwk_data %>%
  filter(!is.na(alarm)) %>%
  filter(!is.na(Social_Index)) %>%
  filter(is.numeric(alarm))

# Convert Social_Index to numeric
hwk_data_filtered$Social_Index <- as.numeric(as.character(hwk_data_filtered$Social_Index))

# Filter out rows where "Species" is exactly "#N/A_species"
hwk_data_filtered <- hwk_data_filtered %>%
  filter(Species != "#N/A_species")

# Calculate overall mean percentages by social structure
overall_means <- hwk_data_filtered %>%
  group_by(Social_Index) %>%
  summarize(Overall_Mean = mean(alarm, na.rm = TRUE) * 100)

# Calculate mean percentages by social structure and species
species_means <- hwk_data_filtered %>%
  group_by(Social_Index, Species) %>%
  summarize(Species_Mean = mean(alarm, na.rm = TRUE) * 100)

# Calculate mean percentages by unique species within each social index
unique_species_means <- hwk_data_filtered %>%
  group_by(Social_Index, Species) %>%
  summarize(Unique_Species_Mean = n() / length(unique(hwk_data_filtered$Trial_ID)) * 100)

# Order the levels of Social_Index
ordered_levels <- c(0, 1, 2, 3, 4)
overall_means$Social_Index <- factor(overall_means$Social_Index, levels = ordered_levels)
species_means$Social_Index <- factor(species_means$Social_Index, levels = ordered_levels)
unique_species_means$Social_Index <- factor(unique_species_means$Social_Index, levels = ordered_levels)

# Merge the data frames to ensure all levels are represented
combined_data <- merge(overall_means, species_means, by = c("Social_Index"))
combined_data <- merge(combined_data, unique_species_means, by = c("Social_Index", "Species"), all.x = TRUE)

# Create a stacked bar plot
ggplot(combined_data, aes(x = Social_Index, y = Unique_Species_Mean, fill = Species)) +
  geom_col(position = "fill", color = "white") +
  geom_text(aes(label = sprintf("%.1f%%", Unique_Species_Mean)), position = position_fill(vjust = 0.5)) +
  labs(title = "Stacked Bar Plot of Alarm Percentage by Social Index and Species",
       x = "Social Index",
       y = "Alarm Percentage") +
  scale_x_discrete(labels = c("0" = "Solo", "1" = "Pair", "2" = "Competitive", "3" = "SSF", "4" = "MSF")) +
  scale_y_continuous(labels = scales::percent_format(scale = 1), limits = c(0, 1)) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability

```
